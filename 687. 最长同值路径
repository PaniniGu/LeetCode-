/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int longestUnivaluePath(TreeNode* root) {
        if(root==NULL) return 0;
        int ans = 0;
        univaluePath(root, &ans);
        return ans;
    }
    
    int univaluePath(TreeNode* root, int* ans){
        if(root==NULL) return 0;
        int l = univaluePath(root->left, ans);
        int r = univaluePath(root->right, ans);
        int pl = 0; 
        int pr = 0;
        if(root->left && root->val == root->left->val) pl = l + 1;
        if(root->right && root->val == root->right->val) pr = r + 1;
        *ans = max(*ans, pr + pl);
        return max(pr, pl);
    }
};
