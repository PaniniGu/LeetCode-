//回溯法

class Solution {
public:
    vector<string> generateParenthesis(int n) {
		vector<string> res;
		helper("",res,n,0,0);
		return res;
	}
    
	void helper(string cur, vector<string> &res, int n, int left, int right)
	{
		//因为right是右括号，数量=n 表明此时已经找到一个结果
		if (right == n)
		{
			res.push_back(cur);
		}
		//可以添加一个左括号
		if (left < n)
		{
			helper(cur+'(',res,n,left+1,right);
		}
		//添加一个右括号
		if (right < left)
		{
			helper(cur+')',res,n,left,right+1);
		}
	}


};
