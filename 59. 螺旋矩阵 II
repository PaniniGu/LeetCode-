class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
        if(n <= 0)
            return {};
        vector<vector<int> > res(n, vector<int>(n, 0));
        vector<vector<int> > visit(n, vector<int>(n, 0));
        res[0][0] = 1;
        visit[0][0] = 1;
        int i = 0, j = 0, count = 1;
        while(count < n*n){
            while(j < n - 1 && visit[i][j + 1] == 0){  //判断右边是否有元素未访问
                res[i][++j] = ++count;
                visit[i][j] = 1;
            }
            while(i < n - 1 && visit[i + 1][j] == 0){  //判断下边是否有元素未访问
                res[++i][j] = ++count;
                visit[i][j] = 1;
            }
            while(j > 0 && visit[i][j - 1] == 0){   //判断左边是否有元素未访问
                res[i][--j] = ++count;
                visit[i][j] = 1;
            }
            while(i > 0 && visit[i - 1][j] == 0){
                res[--i][j] = ++count;
                visit[i][j] = 1;
            }
        }
        return res;
    }
};
