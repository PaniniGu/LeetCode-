//方法一：
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if(prices.size() <= 1) return 0;
        
        int n = prices.size();
        int res = 0;
        int premin = prices[0];
        for(int i = 1; i < n; i++){
            if(prices[i] - premin > res) res = prices[i] - premin;
            if(prices[i] < premin) premin = prices[i];
        }
        return res;
    }
};


//方法二：解法一样，但更快，需要的存储空间更少
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if(prices.size() <= 1) return 0;
        
        int res = 0;
        int premin = prices[0];
        for(int i = 1; i < prices.size(); i++){
            res = max(prices[i] - premin, res);
            premin = min(premin, prices[i]);
        }
        return res;
    }
};
