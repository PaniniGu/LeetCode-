//方法一：比较暴力的方法
class Solution {
public:
    bool canJump(vector<int>& nums) {
        if(nums.size() <= 1)
            return true;
        int n = nums.size();
        vector<int> res(n, 0);
        res[0] = 1;
        for(int i = 0; i < n; i++){
            if(res[i] == 0)
                return false;
            else{
                for(int j = 0; j <= nums[i]; j++){
                    if(i + j < n && res[i + j] == 0) res[i + j] = 1;
                }
            }
        }
        return true;
    }
};



//方法二：贪心算法
class Solution {
public:
    bool canJump(vector<int>& nums) {
        if(nums.size() <= 1)
            return true;
        int n = nums.size();
        int max = 0;  //记录能走的最远的距离
        for(int i = 0; i < n; i++){
            if(i <= max && i + nums[i] > max)
                max = i + nums[i];
        }
        if(max >= n-1) return true;
        else return false;
    }
};
