/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    //合并两个链表
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
         
        if(l1==NULL)
            return l2;
        if(l2==NULL)
            return l1;
        ListNode *result = NULL;
        if(l1->val < l2->val){
            result = l1;
            result->next = mergeTwoLists(l1->next, l2);              
        }
        else{
            result = l2;
            result->next = mergeTwoLists(l1, l2->next);               
            }                                
        return result;
    }
    
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        //判断输入为空
        if(lists.empty())
            return NULL;
        
        int len = lists.size();
        // ListNode *ans;
        
        if(len == 1)
            return lists[0];
        else if(len == 2){
            return mergeTwoLists(lists[0], lists[1]);
        }
        else{
            ListNode *temp = lists[len-1];
            lists.pop_back();
            return mergeTwoLists(temp, mergeKLists(lists));
        }

        
    }
    
};
