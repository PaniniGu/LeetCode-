class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<int> tmp(3);
        vector<vector<int> > res;
        if(nums.empty()) return res;
        sort(nums.begin(), nums.end());
        
        int sum;
        int len = nums.size();
        for(int i = 0; i < len - 2; i++){
            sum = 0 - nums[i];
            tmp[0] = nums[i];
            //转化为两数之和的问题
            for(int j = i + 1, k = len - 1; j < k; ){
                if(nums[j] + nums[k] == sum){
                    tmp[1] = nums[j++];
                    tmp[2] = nums[k--];
                    res.push_back(tmp);
                    
                    while(j < k && nums[j] == nums[j-1])
                        j++;
                    while( j < k && nums[k] == nums[k+1])
                        k--;
                }
                else if(nums[j] + nums[k] < sum)
                    j++;
                else
                    k--;  
            }
            while( i < len - 2 && nums[i+1] == nums[i])
                i++;
        }
        return res;
    }
};
